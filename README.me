In this build spec declaration:
•version represents the version of the build spec standard being used. This build spec declaration usesthe latest version, 0.2.
• phases represents the build phases during which you can instruct CodeBuild to run commands. These build phases are listed here as install, 
    pre_build, build, and post_build. You cannot change the spelling of these build phase names, and you cannot create more build phase names.

• In this example, during the build phase, CodeBuild runs the mvn install command. This command instructs Apache Maven to compile, test, 
    and package the compiled Java class files into a build output artifact. For completeness, a few echo commands are placed in each build phase in 
    this example.When you view detailed build information later in this tutorial, the output of these echo commandscan help you better understand 
    how CodeBuild runs commands and in which order. (Although all buildphases are included in this example, you are not required to include a 
    build phase if you do not plan to run any commands during that phase.) For each build phase, CodeBuild runs each specified command,one at a time, 
    in the order listed, from beginning to end.
• artifacts represents the set of build output artifacts that CodeBuild uploads to the output bucket. files represents the files to include in the 
    build output. CodeBuild uploads the single messageUtil-1.0.jar file found in the target relative directory in the build environment. 
    The filename messageUtil-1.0.jar and the directory name target are based on the way Apache Maven creates and stores build output artifacts for this 
    example only. In your own builds, these file names and directories are different.
